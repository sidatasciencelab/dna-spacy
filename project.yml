title: "DNA spaCy"
description: "PROJECT DESCRIPTION"
yml_description: > 
  The [`project.yml`](project.yml) defines the data assets required by the
  project, as well as the available commands and workflows. For details, see the
  [spaCy projects documentation](https://spacy.io/usage/projects).


# Variables can be referenced across the project.yml using ${vars.var_name}
vars:
  name: "k${vars.kmer_size}-${vars.window_size}"
  lang: "dna"
  author: ""
  description: ""
  output_directory: ""
  train: "train.json"
  dev: "dev.json"
  version: "0.0.1"
  kmer_size: 7
  window_size: 10
  

  # Set a random seed
  seed: 0
  # Set your GPU ID, -1 is CPU
  gpu_id: 0

# These are the directories that the project needs. The project CLI will make
# sure that they always exist.
directories: ["assets", "corpus", "configs", "training", "scripts", "packages"]

# Assets that should be downloaded or available in the directory. We're shipping
# them with the project, so they won't have to be downloaded.
assets:
  - dest: "assets/train.json"
    description: "Demo training data adapted from the `ner_demo` project"
  - dest: "assets/dev.json"
    description: "Demo development data"

# Workflows are sequences of commands (see below) executed in order. You can
# run them via "spacy project run [workflow]". If a commands's inputs/outputs
# haven't changed, it won't be re-run.
workflows:
  all:
    - build

# Project commands, specified in a style similar to CI config files (e.g. Azure
# pipelines). The name is the command name that lets you trigger the command
# via "spacy project run [command] [path]". The help message is optional and
# shown when executing "spacy project run [optional command] [path] --help".
commands:
  - name: "build"
    help: "Build Pipeline"
    script:
      - "python scripts/build_pipeline.py --name ${vars.name} --version ${vars.version} --description '${vars.description}' --author '${vars.author}' --output_directory ${vars.output_directory} --lang ${vars.lang}"
  - name: train
    help: "Training"